{"name":"SFR Toolbox for Matlab","body":"## Scientific File Repository Toolbox \r\nThis toolbox can be used to access scientific data from a variety of different file-formats using standardized syntax. The toolbox assumes that your scientific data consists of continuous data on multiple channels which can be represented by a large 2D array of numerics. In addition, the files may contain attributes describing the data.\r\n\r\n### Object oriented data access.\r\nVendors of data acquisition systems for multichannel continuous data (i.e. TDT, Nicolet, Neuralynx, Blackrock, etc.) use various file formats to store their data. To analyze these data, a scientific lab needs to write methods for each individual system which can result in an inefficient workflow in the lab.\r\n\r\nThis toolbox addresses this issue by representing a dataset (which can consist of 1 or more files) by a single object. The user specifies which files belong to the dataset and which data-format is used in the files. The user can then access the raw data and the meta-data using the properties 'data' and 'attar' of the created object. The toolbox automatically uses the correct 'getMethods' for the associated file-format without any additional input from the user.\r\n\r\n### Specific GET methods per file -format\r\nThe strength of this toolbox is that there is a simple template that can be used to add support for additional file-formats. Basically, only two files are required to add support. An INFOMethod should be created according to a simple specification that returns meta-information in the form of a MATLAB structure and information that is used during the object construction. A GETMethod should return the data in a 2D array ([indeces channels]), utilizing the file-names that are provided in the object.\r\n\r\nAdditional features allow the user to improve efficiency by caching information from the GETMethod and allow the user to add meta-information directly to the object.\r\n\r\n### File Location manager\r\nThe toolbox uses a user-specific XML file to indicate where the files are located on the computer. The user can switch dynamically between multiple sets of locations which can be useful if the path to a specific file changes when the folder is accessed from home or from work. It is also possible to temporarily override the location and specify a direct path to the files.\r\n \r\n### Installation\r\n1.  Download the project and save the downloaded folder on the Matlab path.\r\n2.  Copy the 'sample_ReposFile.xml' to a different location and open using a text-editor.\r\n3.  Change the path attribute of the line that starts with <REPOS id=\"SFRroot\"...> to the location \r\n    where you saved the project.\r\n\r\n### Viewing the example data.    \r\n1.  Start Matlab and browse to the \\SFRExample folder.\r\n2.  Set your SFR-location using:  sfrsetlocation()\r\n3.  Load the 'repos.mat' file in matlab.\r\n4.  View the data using:  repos.data(1:1000, 1:4)\r\n","tagline":"Standardize Scientific File Acces in Matlab.","google":"UA-32525167-1","note":"Don't delete this file! It's used internally to help with page regeneration."}